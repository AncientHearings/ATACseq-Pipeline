SAMPLES:
  - sample1
  - sample2
 
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
fastp:
   input: 
      R1: "data/fastp/input"
      R2: "data/fastp/input"
   output:
      R1_trimmed: "results/fastp"
      R2_trimmed: "results/fastp"
      html: "results/fastp"
      json: "results/fastp"
   params:
      threads: 4
      trim_front1: 5
      trim_front2: 5
      length_required: 30 
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>       
fastqc:
   output: "results/fastqc"
   params:
     threads: 
        default: 2 #Assuming the user has atleast dual-core CPU 
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
mitoATAC:
  input: 
  output: "data/01_preprocessing/mitoATAC/output"
  params: 
    threads: 
      default: 2
    mito_chr: "chrM"
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#02: ALIGNMENT 
#bowtie2
bowtie2:
  input: 
    R1: "data/01_preprocessing/fastp/output"
    R2: "data/01_preprocessing/fastp/output"
  output: "results/bowtie2"
  params:
    index: "data/02_alignment/bowtie2/index/genome"
    threads:
      default: 2
      
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#Post alignment
#Samtools
#samtools sort 
samtools_sort:
  input:
    bam: "results/bowtie2"
  output:
    sorted_bam: "results/samtools_sort"   
  params:
    threads:
      default: 2
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#samtools index
samtools_index: 
    input:
        sorted: "results/samtools_sort"
    output:
        index: "results/samtools_index"
    params:
        threads:
            default: 2 
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#samtools view
samtools_view:
   input:
       markdup_bam: "results/samtools_markdup"
   output:
       filtered_bam: "results/samtools_view"
   params:
       threads: 
           default: 2
       MAPQ: 30
       flags: 1804
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#samtools statistics
samtools_stats:
  input:
    filtered_bam: "results/samtools_view"
  output:
    stats: "results/samtools_stats"
  params:
    threads:
      default: 2
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  #Picard 
  #Picard Collect Alignment Summary Metrics 
picard_collect_alignment_summary_metrics:
  input:
    filtered_bam: "../results/samtools_view"
  output:
    alignment_metrics: "../results/picard/CollectAlignmentSummaryMetrics"
  params:
    reference_genome: "../data/reference_for_picard/genome.fa"
    threads:
      default: 2 #Assuming that the user has atleast dual core CPU.
    validation_stringency: LENIENT
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 #picard 
 #Picard Collect Insert Size Metrics         
picard_collect_insert_size_metrics:
    input:
        bam_sorted: "results/samtools_sort"
    output:
        metrics: "results/picard/CollectInsertSizeMetrics"
    params:
        M: 0.5
        validation_stringency: LENIENT
        threads:
            default: 2
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>           
#tn5 shift 
tn5_shift:
    input:
        filtered_bam: "../results/samtools_view"
    output:
        shifted_bam: "../results/tn5_shift"
        shifted_bam_index: "../results/tn5_shift"
    params:
        threads:
            default: 2
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>                            
               
samtools_markdup:
  input:
    sorted_bam: "results/tn5_shift"
  output:
    markdup_bam: "results/samtools_markdup"
  params:
    threads:
      default: 2
      remove_duplicates: "r"
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>            
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>         
samtools_index_post_markdup: 
    input:
        markdup: "results/samtools_markdup"
    output:
        index: "results/samtools_index"
    params:
        threads:
            default: 2 
            #samtools markdup  
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#bedtools genomecove 
bedtools_genomecov:
  input:
        dedup_bam: "results/samtools_index" 
  output: 
        bedgraph: "results/bedtools_genomecov"
  params:
    genome: "data/bedtools/reference/genome.chrom.sizes"
    threads:
      default: 2
    extra: "-bg"
#output filtered peaks                
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#sorted bedgraph files
sorted_bedgraph:
    input: 
        bedgraph: "results/bedtools_genomecov"
    output:s
        sorted_bedgraph: "results/sorted_bedgraph_file"
    params:
        threads: 
            default: 2
        memory_mb: 2G
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        
